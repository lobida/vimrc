https://tmuxcheatsheet.com/
tmux shortcuts & cheatsheet
start new:

tmux
start new with session name:

tmux new -s myname
attach:

tmux a  #  (or at, or attach)
attach to named:

tmux a -t myname
list sessions:

tmux ls
kill session:

tmux kill-session -t myname
Kill all the tmux sessions:

tmux ls | grep : | cut -d. -f1 | awk '{print substr($1, 0, length($1)-1)}' | xargs kill
In tmux, hit the prefix ctrl+b (my modified prefix is ctrl+a) and then:

Sessions

:new<CR>  new session
s  list sessions
$  name session
Windows (tabs)

c  create window
w  list windows
n  next window
p  previous window
f  find window
,  name window
&  kill window
Panes (splits)

%  vertical split
"  horizontal split

o  swap panes
q  show pane numbers
x  kill pane
+  break pane into window (e.g. to select text by mouse to copy)
-  restore pane from window
⍽  space - toggle between layouts
<prefix> q (Show pane numbers, when the numbers show up type the key to goto that pane)
<prefix> { (Move the current pane left)
<prefix> } (Move the current pane right)
<prefix> z toggle pane zoom
Sync Panes

You can do this by switching to the appropriate window, typing your Tmux prefix (commonly Ctrl-B or Ctrl-A) and then a colon to bring up a Tmux command line, and typing:

:setw synchronize-panes
You can optionally add on or off to specify which state you want; otherwise the option is simply toggled. This option is specific to one window, so it won’t change the way your other sessions or windows operate. When you’re done, toggle it off again by repeating the command. tip source

Resizing Panes

You can also resize panes if you don’t like the layout defaults. I personally rarely need to do this, though it’s handy to know how. Here is the basic syntax to resize panes:

PREFIX : resize-pane -D (Resizes the current pane down)
PREFIX : resize-pane -U (Resizes the current pane upward)
PREFIX : resize-pane -L (Resizes the current pane left)
PREFIX : resize-pane -R (Resizes the current pane right)
PREFIX : resize-pane -D 20 (Resizes the current pane down by 20 cells)
PREFIX : resize-pane -U 20 (Resizes the current pane upward by 20 cells)
PREFIX : resize-pane -L 20 (Resizes the current pane left by 20 cells)
PREFIX : resize-pane -R 20 (Resizes the current pane right by 20 cells)
PREFIX : resize-pane -t 2 20 (Resizes the pane with the id of 2 down by 20 cells)
PREFIX : resize-pane -t -L 20 (Resizes the pane with the id of 2 left by 20 cells)
Copy mode:

Pressing PREFIX [ places us in Copy mode. We can then use our movement keys to move our cursor around the screen. By default, the arrow keys work. we set our configuration file to use Vim keys for moving between windows and resizing panes so we wouldn’t have to take our hands off the home row. tmux has a vi mode for working with the buffer as well. To enable it, add this line to .tmux.conf:

setw -g mode-keys vi
With this option set, we can use h, j, k, and l to move around our buffer.

To get out of Copy mode, we just press the ENTER key. Moving around one character at a time isn’t very efficient. Since we enabled vi mode, we can also use some other visible shortcuts to move around the buffer.

For example, we can use "w" to jump to the next word and "b" to jump back one word. And we can use "f", followed by any character, to jump to that character on the same line, and "F" to jump backwards on the line.

   Function                vi             emacs
   Back to indentation     ^              M-m
   Clear selection         Escape         C-g
   Copy selection          Enter          M-w
   Cursor down             j              Down
   Cursor left             h              Left
   Cursor right            l              Right
   Cursor to bottom line   L
   Cursor to middle line   M              M-r
   Cursor to top line      H              M-R
   Cursor up               k              Up
   Delete entire line      d              C-u
   Delete to end of line   D              C-k
   End of line             $              C-e
   Goto line               :              g
   Half page down          C-d            M-Down
   Half page up            C-u            M-Up
   Next page               C-f            Page down
   Next word               w              M-f
   Paste buffer            p              C-y
   Previous page           C-b            Page up
   Previous word           b              M-b
   Quit mode               q              Escape
   Scroll down             C-Down or J    C-Down
   Scroll up               C-Up or K      C-Up
   Search again            n              n
   Search backward         ?              C-r
   Search forward          /              C-s
   Start of line           0              C-a
   Start selection         Space          C-Space
   Transpose chars                        C-t
Misc

d  detach
t  big clock
?  list shortcuts
:  prompt
Configurations Options:

# Mouse support - set to on if you want to use the mouse
* setw -g mode-mouse off
* set -g mouse-select-pane off
* set -g mouse-resize-pane off
* set -g mouse-select-window off

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Center the window list
set -g status-justify centre

# Maximize and restore a pane
unbind Up bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

                 .---------------.
                ( server options  )
                 `---------------'

===========================================================

              .----------------------.
             ( global session options )    base-index 1
              `---------+--+---------'     visual-bell on
                     --/    \--
                  --/          \--
           +-----/-----+    +-----\-----+
           | session X |    | session Y |
           +-----------+    +-----------+
           base-index 0     visual-bell off

  effective values for X:
      base-index 0     (set)
      visual-bell on   (global)

  effective values for Y:
      base-index 1     (global)
      visual-bell off  (set)

===========================================================

              .---------------------.
             ( global window options )    pane-base-index 1
              `---------+++---------'     mode-keys emacs
                    ---/ | \---
                 --/     |     \---
             ---/        |         \---
         ---/            |             \---
+-------/----+    +------+-----+    +------\-----+
| window X.0 |    | window X.1 |    | window Y.0 |
+------------+    +------------+    +------------+
pane-base-index 0                   mode-keys vi
mode-keys vi

  effective values for X.0:
      pane-base-index 0   (set)
      mode-keys vi        (set)

  effective values for X.1:
      pane-base-index 1   (global)
      mode-keys emacs     (global)

  effective values for Y.0:
      pane-base-index 1   (global)
      mode-keys vi        (set)

#TODO: select color
tmux plugin management
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
https://github.com/tmux-plugins/tpm
https://github.com/seebi/tmux-colors-solarized
https://github.com/tmux-plugins/tmux-yank
https://github.com/tmux-plugins/tmux-copycat

===========================================================
Restoring pane contents

This plugin enables saving and restoring tmux pane contents.

This feature can be enabled by adding this line to .tmux.conf:

set -g @resurrect-capture-pane-contents 'on'
https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_pane_contents.md


===========================================================
Restoring vim and neovim sessions

save vim/neovim sessions. I recommend tpope/vim-obsession (as almost every plugin, it works for both vim and neovim).
in .tmux.conf:

# for vim
set -g @resurrect-strategy-vim 'session'
# for neovim
set -g @resurrect-strategy-nvim 'session'
tmux-resurrect will now restore vim and neovim sessions if Session.vim file is present.

https://github.com/tpope/vim-obsession

Seamless navigation between tmux panes and vim splits
christoomey/vim-tmux-navigator

++++++++++++++++++++++++++++++
copycat
Search

    prefix + / - regex search (strings work too)

Example search entries:

    foo - searches for string foo
    [0-9]+ - regex search for numbers

Grep is used for searching.
Searches are case insensitive.
Predefined searches

    prefix + ctrl-f - simple file search
    prefix + ctrl-g - jumping over git status files (best used after git status command)
    prefix + alt-h - jumping over SHA-1 hashes (best used after git log command)
    prefix + ctrl-u - url search (http, ftp and git urls)
    prefix + ctrl-d - number search (mnemonic d, as digit)
    prefix + alt-i - ip address search

These start "copycat mode" and jump to first match.
"Copycat mode" bindings

These are enabled when you search with copycat:

    n - jumps to the next match
    N - jumps to the previous match

To copy a highlighted match:

    Enter - if you're using Tmux vi mode
    ctrl-w or alt-w - if you're using Tmux emacs mode

Copying a highlighted match will take you "out" of copycat mode. Paste with prefix + ] (this is Tmux default paste).

Copying highlighted matches can be enhanced with tmux yank.

+++++++++++++++++++++++++++++++
yank


    Normal Mode

        prefix–y — copies text from the command line to the clipboard.

        Works with all popular shells/repls. Tested with:
            shells: bash, zsh (with bindkey -e), tcsh
            repls: irb, pry, node, psql, python, php -a, coffee
            remote shells: ssh, mosh
            vim/neovim command line (requires vim-husk or vim-rsi plugin)

        prefix–Y — copy the current pane's current working directory to the clipboard.

    Copy Mode
        y — copy selection to system clipboard.
        Y (shift-y) — "put" selection. Equivalent to copying a selection, and pasting it to the command line.

